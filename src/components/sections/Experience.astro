---
import type { Work } from '../../types';

const { work } = Astro.props;

import Section from "../Section.astro"
import HTML from "@/icons/html.astro"
import CSS from "@/icons/css.astro"
import JavaScript from "@/icons/javascript.astro"
import TypeScript from "@/icons/type.astro"
import React from "@/icons/react.astro"
import Node from "@/icons/node.astro"
import MySQL from "@/icons/sql.astro"
import Git from "@/icons/git.astro"
import GitHub from "@/icons/GitHub.astro"
import Tailwind from "@/icons/tailwind.astro"
import Next from "@/icons/next.astro"
import Swift from "@/icons/swift.astro"
import SwiftUI from "@/icons/swiftui.astro"
import Kotlin from "@/icons/kotlin.astro"
import Flutter from "@/icons/flutter.astro"

const SKILLS_ICONS: Record<string, any> = {
  HTML,
  CSS,
  JavaScript,
  TypeScript,
  React,
  Node,
  MySQL,
  Git,
  GitHub,
  Next,
  Tailwind,
  Swift,
  SwiftUI,
  Kotlin,
  Flutter,
}
---
<Section className={Astro.props.className} title="Experience">
  <ul class="flex flex-col">
    {work.map(({ name, startDate, endDate, position, summary, responsibilities, highlights, skills, location, location_type }: Work) => {
      const start = new Date(startDate);
      const end = endDate ? new Date(endDate) : null;
      const duration = end 
        ? `${start.toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' })} - ${end.toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' })}`
        : `${start.toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' })} - Présent`;

      return (
        <li class="relative print:py-2">
          <div class="group relative grid pb-1 print:pb-0 transition-all print:grid-cols-1 print:gap-1 sm:grid-cols-12 sm:gap-8 md:gap-6 lg:hover:!opacity-100 ">
            <header class="relative mt-1 text-xs font-semibold sm:col-span-2">
              <time datetime={startDate} data-title={startDate}>{duration}</time>
            </header>
            <div class="relative flex flex-col pb-6 print:pb-0 before:-ml-6 sm:col-span-10 before:w-px print:before:hidden before:absolute before:bg-skin-muted before:h-full before:mt-2">
            <div class="absolute w-2 h-2 bg-skin-muted rounded-full mt-2 -translate-x-[1.71rem] ring print:hidden ring-skin-fill"></div>
              <h3>
                <div class="inline-flex items-center text-lg print:text-base leading-tight group/link focus-visible:text-amber-500" aria-label="{position} - {company}">
                  <span>{position} <span>@</span> 
                  {name}
                  </span>
                </div>
              </h3>
              {(location || location_type) && (
                <div class="text-xs text-skin-muted">
                  {location} {location && location_type && '-'} {location_type}
                </div>
              )}
              <div class="mt-4  print:gap-0 flex flex-col gap-4 print:text-xs text-sm" x-data="{ expanded: false }">
                {summary && (
                  <div class="flex flex-col gap-1">
                    <h4>Summary:</h4>
                    <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                      {Array.isArray(summary) ? (
                        summary.map((item: string) => (
                          <li>{item}</li>
                        ))
                      ) : (
                        <li>{summary}</li>
                      )}
                    </ul>
                  </div>
                )}

                {highlights && highlights.length > 0 && (
                  <div class="highlights">
                    <h4>Points clés</h4>
                    <ul>
                      {highlights.map((highlight: string) => (
                        <li>{highlight}</li>
                      ))}
                    </ul>
                  </div>
                )}

                {responsibilities && responsibilities.length > 0 && (
                  <div class="responsibilities">
                    <h4>Responsabilités</h4>
                    <ul>
                      {responsibilities.map((responsibility: string) => (
                        <li>{responsibility}</li>
                      ))}
                    </ul>
                  </div>
                )}

                {skills && skills.length > 0 && (
                  <div class="skills">
                    <h4>Compétences</h4>
                    <ul>
                      {skills.map((skill: string) => {
                        const iconName = skill === "Next.js" ? "Next" : skill
                        const Icon = SKILLS_ICONS[iconName]
                        return (
                          <li class="bg-skin-button-accent/20 border-skin-hue/20 text-skin-hue print:p-0 print:bg-transparent print:text-zinc-800 flex gap-1 items-center border-solid print:border-none border rounded-md px-2 py-0.5 text-xs">
                            {Icon && <Icon />} <span>{skill}</span>
                          </li>
                        )
                      })}
                    </ul>
                  </div>
                )}

                <button @click="expanded = ! expanded" class="print:hidden group/more w-fit cursor-pointer items-center justify-center gap-1.5 text-xs underline text-skin-muted transition-all hover:text-skin-base flex">
                  <span x-text="expanded ? 'Show less' : 'Show more'">Show more</span>
                  <svg class="w-4 h-4 group-hover/more:translate-y-0.5 duration-200 ease-out" :class="{ 'rotate-180': expanded }" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
                </button>
              </div>
            </div>
        </div>
        </li>
      )
    })}
  </ul>  
</Section>
<script is:inline defer src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"></script>
<script is:inline defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<style>
  li::marker {
    @apply text-skin-hue
  }

  .experience-section {
    margin: 2rem 0;
  }

  .experience-list {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .experience-item {
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 1.5rem;
    background: var(--card-bg);
  }

  .experience-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .experience-header h3 {
    margin: 0;
    color: var(--heading-color);
  }

  .duration {
    color: var(--text-muted);
    font-size: 0.9rem;
  }

  .experience-details {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .position {
    font-weight: 600;
    color: var(--text-color);
    margin: 0;
  }

  .location {
    display: flex;
    gap: 0.5rem;
    color: var(--text-muted);
    font-size: 0.9rem;
    margin: 0;
  }

  .location-type {
    background: var(--tag-bg);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
  }

  .summary {
    color: var(--text-color);
    margin: 0;
  }

  .highlights, .responsibilities, .skills {
    margin-top: 1rem;
  }

  .highlights h4, .responsibilities h4, .skills h4 {
    color: var(--heading-color);
    margin: 0 0 0.5rem 0;
    font-size: 1rem;
  }

  .highlights ul, .responsibilities ul, .skills ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .highlights li, .responsibilities li, .skills li {
    background: var(--tag-bg);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.9rem;
  }
</style>